What is open source?
 The term open source refers to something people can modify and share because 
its design is publicly accessible.


What is open source software?
 Open source software is software with source code that anyone can inspect, 
modify, and enhance.


Private softwares are called close source softwares or proprietary softwares.


What is Cloud Computing?
 Cloud computing is the delivery of computing services – including servers, 
storage, databases, networking, software, analytics and intelligence – over 
the Internet (“the cloud”) to offer faster innovation, flexible resources and 
economies of scale. In the simplest terms, cloud computing means storing and 
accessing data and programs over the internet instead of your computer's hard 
drive.


Orienting yourself to a new project
 Learn to read the room before starting conversations about your interests. Why?
how if they are talking about goldfish and you start to talk about llamas? They 
will stare so strange to you right?


Anatomy of an open source
 Spending years on only one open source project means your comfortable with it. 
But every open source has different environment so try to move to different 
projects and you will understand the norms,vocabulary and communication style 
are so different. That said, many open source project follows a similar project 
structure. Understanding the roles and overall process helps you to understand 
the project quickly.


A typical open source has:
 *Author: The person/s or organization that created the project

 *Owner: The person/s who has administrative ownership over the organization or 
  repository (not always the same as the original author)

 *Maintainers: Contributors who are responsible for driving the vision and 
  managing the organizational aspects of the project (They may also be authors 
  or owners of the project.)

 *Contributors: Everyone who has contributed something back to the project

 *Community Members: People who use the project. They might be active in 
  conversations or express their opinion on the project’s direction

Bigger projects may also have subcommittees or working groups focused on 
different tasks, such as tooling, triage, community moderation, and event 
organizing. Look on a project’s website for a “team” page, or in the repository 
for governance documentation, to find this information.


A project also has documentation. These files are usually listed in the top 
level of a repository.

 *LICENSE: By definition, every open source project must have an open source 
  license. If the project does not have a license, it is not open source.

 *README: The README is the instruction manual that welcomes new community 
  members to the project. It explains why the project is useful and how to get 
  started.

 *CONTRIBUTING: Whereas READMEs help people use the project, contributing docs 
  help people contribute to the project. It explains what types of contributions
   are needed and how the process works. While not every project has a 
  CONTRIBUTING file, its presence signals that this is a welcoming project to 
  contribute to.

 *CODE_OF_CONDUCT: The code of conduct sets ground rules for participants’ 
  behavior associated and helps to facilitate a friendly, welcoming environment.
   While not every project has a CODE_OF_CONDUCT file, its presence signals that
   this is a welcoming project to contribute to.

 *Other documentation: There might be additional documentation, such as 
  tutorials, walkthroughs or governance policies, especially on bigger projects.


Open Source project tools for organizing discussions
 Reading through the archives will give you a good picture of how the community 
thinks and works.

 *Issue tracker: Where people discuss issues related to the project.

 *Pull requests: Where people discuss and review changes that are in progress.

 *Discussion forums or mailing lists: Some projects may use these channels for 
  conversational topics (for example, “How do I…“ or “What do you think about…“ 
  instead of bug reports or feature requests). Others use the issue tracker for 
  all conversations.

 *Synchronous chat channel: Some projects use chat channels (such as Slack or 
  IRC) for casual conversation, collaboration, and quick exchanges.
